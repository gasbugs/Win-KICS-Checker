# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/버전 "2"를 사용하도록 명시합니다.
# 이 버전은 Vagrant 1.1+ 부터 사용 가능하며, 하위 호환성을 보장합니다.
Vagrant.configure("2") do |config|

  #################################################################
  # 1. 가상 머신(Box) 설정
  # 사용할 Vagrant Box 이미지를 지정합니다.
  # gusztavvargadr/windows-server-2019-standard는 가장 널리 사용되는
  # Windows Server 2019 이미지 중 하나입니다.
  #################################################################
  config.vm.box = "gusztavvargadr/windows-server-2019-standard"
  
  # 게스트 운영체제가 Windows임을 명시적으로 지정합니다.
  config.vm.guest = :windows

  # Windows 가상 머신의 통신 방식으로 "winrm"을 사용하도록 설정합니다.
  # (리눅스는 보통 "ssh"를 사용합니다.)
  config.vm.communicator = "winrm"

  #################################################################
  # 2. 네트워크 설정
  # 가상 머신의 네트워크를 어떻게 구성할지 정의합니다.
  #################################################################

  # 포트 포워딩(Port Forwarding) 설정
  # 호스트(내 PC)의 특정 포트로 들어오는 요청을 게스트(가상 머신)의 포트로 전달합니다.
  # 예: 내 PC의 5986 포트로 접속하면 -> 가상 머신의 5986(WinRM-HTTPS) 포트로 연결
  config.vm.network "forwarded_port", guest: 5985, host: 5985, id: "winrm", auto_correct: true
  config.vm.network "forwarded_port", guest: 5986, host: 5986, id: "winrm-ssl", auto_correct: true
  
  # 만약 RDP(원격 데스크톱)를 사용하고 싶다면 아래 주석을 해제하세요.
  # config.vm.network "forwarded_port", guest: 3389, host: 3389

  #################################################################
  # 3. 가상화 공급자(Provider) 설정
  # VirtualBox, Hyper-V, VMware 등 어떤 가상화 프로그램을 사용할지 정의합니다.
  # 여기서는 VirtualBox를 기준으로 작성되었습니다.
  #################################################################
  config.vm.provider "virtualbox" do |vb|
    
    # 가상 머신에 할당할 메모리(RAM) 크기를 설정합니다. (단위: MB)
    # Windows Server는 최소 2GB 이상을 권장합니다.
    vb.memory = "8192" # 4GB

    # 가상 머신에 할당할 CPU 코어 개수를 설정합니다.
    vb.cpus = "2"

    # VirtualBox GUI를 표시할지 여부를 설정합니다.
    # true로 설정하면 가상 머신이 부팅되는 과정을 창으로 볼 수 있습니다.
    vb.gui = true
    
    # 가상 머신의 이름을 설정합니다.
    vb.name = "Win2019-Server"
  end

  #################################################################
  # 4. 프로비저닝(Provisioning) 설정
  # 가상 머신이 처음 생성된 후 실행할 스크립트나 설정을 정의합니다.
  # 예를 들어, Chocolatey(윈도우용 패키지 관리자)를 설치하거나
  # 특정 프로그램을 자동으로 설치할 수 있습니다.
  #################################################################
  # 아래는 Chocolatey를 설치하는 간단한 인라인 파워쉘 스크립트 예시입니다.
  # config.vm.provision "shell", inline: <<-SHELL
  #   Set-ExecutionPolicy Bypass -Scope Process -Force;
  #   [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
  #   iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  # SHELL

  config.vm.provision "shell", path: "provisioning/install_features.ps1"
  config.vm.provision "shell", path: "provisioning/configure_vulnerabilities.ps1"

end